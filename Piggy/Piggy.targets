<!--
   Copyright (c) Ken Domino. All Rights Reserved.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>
  
  <PropertyGroup>
    <PiggyGenCodeFileNames Condition="'$(PiggyGenCodeFileNames)'==''">$(MSBuildProjectFile).PiggyGeneratedCodeFileListAbsolute.txt</PiggyGenCodeFileNames>
  </PropertyGroup>

  <UsingTask Condition="'$(PiggyBuildTaskPath)'!=''" TaskName="Piggy.Build.Task.PiggyClassGenerationTask" AssemblyFile="$(PiggyBuildTaskPath)\Piggy.dll" />

  <PropertyGroup>
    <PrepareResourcesDependsOn>
      PiggyCompile;
      PiggyCompileAddFilesGenerated;
      $(PrepareResourcesDependsOn)
    </PrepareResourcesDependsOn>
    <SourceFilesProjectOutputGroupDependsOn>
      PiggyCompile;
      PiggyCompileAddFilesGenerated;
      $(SourceFilesProjectOutputGroupDependsOn)
    </SourceFilesProjectOutputGroupDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <PiggyCompileDependsOn>
      PiggyCompileReadGeneratedFileList
    </PiggyCompileDependsOn>
  </PropertyGroup>

  <ItemGroup Condition="'$(BuildingInsideVisualStudio)'=='true'">
    <AvailableItemName Include="Piggy" />
  </ItemGroup>

  <ItemDefinitionGroup>
    <Piggy>
      <Generator>MSBuild:Compile</Generator>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <Encoding>UTF-8</Encoding>
      <TargetLanguage>CSharp</TargetLanguage>
    </Piggy>
  </ItemDefinitionGroup>

  <Target Name="PiggyCompileReadGeneratedFileList">
    <ReadLinesFromFile File="$(IntermediateOutputPath)$(PiggyGenCodeFileNames)">
      <Output TaskParameter="Lines" ItemName="PiggyOutputCodeFilesList"/>
    </ReadLinesFromFile>
  </Target>

  <PropertyGroup>
    <!-- Add grammar compilation to the CoreCompileDependsOn so that the IDE inproc compilers (particularly VB)
         can "see" the generated source files. -->
    <CoreCompileDependsOn Condition="'$(BuildingInsideVisualStudio)' == 'true' ">
      PiggyDesignTimeGrammarCompilation;
      $(CoreCompileDependsOn)
    </CoreCompileDependsOn>
  </PropertyGroup>

  <Target Name="PiggyDesignTimeGrammarCompilation">
    <PropertyGroup>
      <PiggyDesignTimeBuild Condition="'$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true'">true</PiggyDesignTimeBuild>
    </PropertyGroup>

    <!-- Only if we are not actually performing a compile i.e. we are in design mode -->
    <CallTarget Condition="'$(PiggyDesignTimeBuild)' == 'true'"
                Targets="PiggyCompile" />
  </Target>

  <Target Name="PiggyCompile"
          DependsOnTargets="$(PiggyCompileDependsOn)"
          Condition="'@(Piggy)' != ''"
          Inputs="@(Piggy);@(PiggyTokens);@(PiggyAbstractGrammar)"
          Outputs="@(PiggyOutputCodeFilesList);
                  $(IntermediateOutputPath)$(PiggyGenCodeFileNames);">

    <ItemGroup>
      <PiggyGeneratedCodeFiles Remove="@(PiggyGeneratedCodeFiles)" />
    </ItemGroup>

    <PropertyGroup>
      <PiggyDesignTimeBuild>false</PiggyDesignTimeBuild>
      <PiggyDesignTimeBuild Condition="'$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true'">true</PiggyDesignTimeBuild>
    </PropertyGroup>

    <PiggyClassGenerationTask
      OutputPath="%(Piggy.OutputFile)"
      ClangOptions="%(Piggy.ClangOptions)"
      ClangSourceFile="%(Piggy.ClangSourceFile)"
      AstOutputFile="%(Piggy.AstOutputFile)"
      PackedAst="%(Piggy.PackedAst)"
      InitialTemplate="%(FullPath)"
      >

      <Output ItemName="PiggyGeneratedCodeFiles" TaskParameter="GeneratedCodeFiles" />
    </PiggyClassGenerationTask>

    <WriteLinesToFile
      Condition="'$(PiggyDesignTimeBuild)' != 'true'"
      File="$(IntermediateOutputPath)$(PiggyGenCodeFileNames)"
      Lines="@(PiggyGeneratedCodeFiles)"
      Overwrite="true"/>
  </Target>

  <Target Name="PiggyCompileAddFilesGenerated"
          AfterTargets="PiggyCompile"
          Condition="'@(Piggy)' != ''">

    <ItemGroup>
      <PiggyGeneratedCodeFiles Condition="'@(PiggyGeneratedCodeFiles)' == ''" Include="@(PiggyOutputCodeFilesList)" />
    </ItemGroup>

    <ItemGroup>
      <FileWrites Include="@(PiggyGeneratedCodeFiles);
                           $(IntermediateOutputPath)$(PiggyGenCodeFileNames);" />
    </ItemGroup>

    <ItemGroup>
      <Compile Include="@(PiggyGeneratedCodeFiles)" />
      <!-- The WinFX "GenerateTemporaryTargetAssembly" target requires generated code files be added here. -->
      <_GeneratedCodeFiles Include="@(PiggyGeneratedCodeFiles)" />
    </ItemGroup>

  </Target>

  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)..\build\PiggySchema.xml">
      <Context>Project</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)..\build\Piggy.xml">
      <Context>File;BrowseObject</Context>
    </PropertyPageSchema>
  </ItemGroup>

  <Import Project="Piggy.DefaultItems.targets" />
</Project>
