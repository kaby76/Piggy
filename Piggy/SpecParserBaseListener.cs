//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SpecParser.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISpecParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class SpecParserBaseListener : ISpecParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpec([NotNull] SpecParserParser.SpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpec([NotNull] SpecParserParser.SpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.items"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterItems([NotNull] SpecParserParser.ItemsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.items"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitItems([NotNull] SpecParserParser.ItemsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace([NotNull] SpecParserParser.NamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace([NotNull] SpecParserParser.NamespaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.exclude"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExclude([NotNull] SpecParserParser.ExcludeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.exclude"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExclude([NotNull] SpecParserParser.ExcludeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.import_file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImport_file([NotNull] SpecParserParser.Import_fileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.import_file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImport_file([NotNull] SpecParserParser.Import_fileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.dllimport"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDllimport([NotNull] SpecParserParser.DllimportContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.dllimport"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDllimport([NotNull] SpecParserParser.DllimportContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.add_after_usings"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd_after_usings([NotNull] SpecParserParser.Add_after_usingsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.add_after_usings"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd_after_usings([NotNull] SpecParserParser.Add_after_usingsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCode([NotNull] SpecParserParser.CodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCode([NotNull] SpecParserParser.CodeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.prefix_strip"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrefix_strip([NotNull] SpecParserParser.Prefix_stripContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.prefix_strip"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrefix_strip([NotNull] SpecParserParser.Prefix_stripContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.class_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_name([NotNull] SpecParserParser.Class_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.class_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_name([NotNull] SpecParserParser.Class_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.calling_convention"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCalling_convention([NotNull] SpecParserParser.Calling_conventionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.calling_convention"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCalling_convention([NotNull] SpecParserParser.Calling_conventionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.compiler_option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompiler_option([NotNull] SpecParserParser.Compiler_optionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.compiler_option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompiler_option([NotNull] SpecParserParser.Compiler_optionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.pattern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPattern([NotNull] SpecParserParser.PatternContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.pattern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPattern([NotNull] SpecParserParser.PatternContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.re"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRe([NotNull] SpecParserParser.ReContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.re"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRe([NotNull] SpecParserParser.ReContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.simple_re"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_re([NotNull] SpecParserParser.Simple_reContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.simple_re"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_re([NotNull] SpecParserParser.Simple_reContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.basic_re"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBasic_re([NotNull] SpecParserParser.Basic_reContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.basic_re"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBasic_re([NotNull] SpecParserParser.Basic_reContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.star"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStar([NotNull] SpecParserParser.StarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.star"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStar([NotNull] SpecParserParser.StarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.plus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlus([NotNull] SpecParserParser.PlusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.plus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlus([NotNull] SpecParserParser.PlusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.elementary_re"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementary_re([NotNull] SpecParserParser.Elementary_reContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.elementary_re"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementary_re([NotNull] SpecParserParser.Elementary_reContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroup([NotNull] SpecParserParser.GroupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroup([NotNull] SpecParserParser.GroupContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.any"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAny([NotNull] SpecParserParser.AnyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.any"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAny([NotNull] SpecParserParser.AnyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.eos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEos([NotNull] SpecParserParser.EosContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.eos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEos([NotNull] SpecParserParser.EosContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.char"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChar([NotNull] SpecParserParser.CharContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.char"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChar([NotNull] SpecParserParser.CharContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet([NotNull] SpecParserParser.SetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet([NotNull] SpecParserParser.SetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.positive_set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPositive_set([NotNull] SpecParserParser.Positive_setContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.positive_set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPositive_set([NotNull] SpecParserParser.Positive_setContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.negative_set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegative_set([NotNull] SpecParserParser.Negative_setContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.negative_set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegative_set([NotNull] SpecParserParser.Negative_setContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.set_items"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_items([NotNull] SpecParserParser.Set_itemsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.set_items"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_items([NotNull] SpecParserParser.Set_itemsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.set_item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_item([NotNull] SpecParserParser.Set_itemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.set_item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_item([NotNull] SpecParserParser.Set_itemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.range"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRange([NotNull] SpecParserParser.RangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.range"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRange([NotNull] SpecParserParser.RangeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
