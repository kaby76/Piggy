//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SpecParser.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISpecParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class SpecParserBaseListener : ISpecParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpec([NotNull] SpecParserParser.SpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpec([NotNull] SpecParserParser.SpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.items"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterItems([NotNull] SpecParserParser.ItemsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.items"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitItems([NotNull] SpecParserParser.ItemsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.extends"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtends([NotNull] SpecParserParser.ExtendsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.extends"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtends([NotNull] SpecParserParser.ExtendsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace([NotNull] SpecParserParser.NamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace([NotNull] SpecParserParser.NamespaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHeader([NotNull] SpecParserParser.HeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHeader([NotNull] SpecParserParser.HeaderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.include"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInclude([NotNull] SpecParserParser.IncludeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.include"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInclude([NotNull] SpecParserParser.IncludeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.clang_file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClang_file([NotNull] SpecParserParser.Clang_fileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.clang_file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClang_file([NotNull] SpecParserParser.Clang_fileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.clang_option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClang_option([NotNull] SpecParserParser.Clang_optionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.clang_option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClang_option([NotNull] SpecParserParser.Clang_optionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.template"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplate([NotNull] SpecParserParser.TemplateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.template"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplate([NotNull] SpecParserParser.TemplateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRexp([NotNull] SpecParserParser.RexpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRexp([NotNull] SpecParserParser.RexpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.simple_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_rexp([NotNull] SpecParserParser.Simple_rexpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.simple_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_rexp([NotNull] SpecParserParser.Simple_rexpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.basic_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBasic_rexp([NotNull] SpecParserParser.Basic_rexpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.basic_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBasic_rexp([NotNull] SpecParserParser.Basic_rexpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.star_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStar_rexp([NotNull] SpecParserParser.Star_rexpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.star_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStar_rexp([NotNull] SpecParserParser.Star_rexpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.plus_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlus_rexp([NotNull] SpecParserParser.Plus_rexpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.plus_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlus_rexp([NotNull] SpecParserParser.Plus_rexpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.elementary_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementary_rexp([NotNull] SpecParserParser.Elementary_rexpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.elementary_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementary_rexp([NotNull] SpecParserParser.Elementary_rexpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.group_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroup_rexp([NotNull] SpecParserParser.Group_rexpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.group_rexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroup_rexp([NotNull] SpecParserParser.Group_rexpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.basic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBasic([NotNull] SpecParserParser.BasicContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.basic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBasic([NotNull] SpecParserParser.BasicContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.simple_basic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_basic([NotNull] SpecParserParser.Simple_basicContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.simple_basic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_basic([NotNull] SpecParserParser.Simple_basicContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.kleene_star_basic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKleene_star_basic([NotNull] SpecParserParser.Kleene_star_basicContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.kleene_star_basic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKleene_star_basic([NotNull] SpecParserParser.Kleene_star_basicContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.id_or_star_or_empty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId_or_star_or_empty([NotNull] SpecParserParser.Id_or_star_or_emptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.id_or_star_or_empty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId_or_star_or_empty([NotNull] SpecParserParser.Id_or_star_or_emptyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.more"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMore([NotNull] SpecParserParser.MoreContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.more"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMore([NotNull] SpecParserParser.MoreContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCode([NotNull] SpecParserParser.CodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCode([NotNull] SpecParserParser.CodeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterText([NotNull] SpecParserParser.TextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitText([NotNull] SpecParserParser.TextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.attr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttr([NotNull] SpecParserParser.AttrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.attr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttr([NotNull] SpecParserParser.AttrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SpecParserParser.pass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPass([NotNull] SpecParserParser.PassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SpecParserParser.pass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPass([NotNull] SpecParserParser.PassContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
