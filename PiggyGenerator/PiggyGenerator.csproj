<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFramework>netstandard2.0</TargetFramework>
    <StartupObject />
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="AstDump.cs" />
    <Compile Remove="EnumVisitor.cs" />
    <Compile Remove="Extensions.cs" />
    <Compile Remove="ForwardDeclarationVisitor.cs" />
    <Compile Remove="FunctionVisitor.cs" />
    <Compile Remove="ICXCursorVisitor.cs" />
    <Compile Remove="StructVisitor.cs" />
    <Compile Remove="TypedefUses.cs" />
    <Compile Remove="TypeDefVisitor.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="x" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Antlr4.Runtime.Standard" Version="4.7.2" />
    <PackageReference Include="Antlr4BuildTasks" Version="1.0.4" />
    <PackageReference Include="Microsoft.CodeAnalysis" Version="2.10.0" />
    <PackageReference Include="Microsoft.CSharp" Version="4.5.0" />
    <PackageReference Include="System.Linq.Dynamic" Version="1.0.7" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\ClangCode\ClangCode.vcxproj">
      <Name>ClangCode</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="..\PiggyRuntime\PiggyRuntime.csproj" />
    <ProjectReference Include="..\Symtab\Symtab.csproj" />
  </ItemGroup>

  <!-- libclang name, unlikely to need overriding -->
  <PropertyGroup Condition="'$(LibClangName)' == ''">
    <LibClangName>libclang</LibClangName>
  </PropertyGroup>

  <!-- Auto-detect LLVM... more or less -->
  <PropertyGroup Condition="'$(LLVMIncludePath)' == ''">
    <LLVMIncludePath Condition="'$(OS)' == 'Windows_NT'">C:\Program Files\LLVM\include</LLVMIncludePath>
    <LLVMIncludePath Condition="'$(OS)' != 'Windows_NT'">/usr/lib/llvm-6.0/include</LLVMIncludePath>
  </PropertyGroup>

</Project>
